DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_RELOCS_STRIPPED			,0x0001)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_EXECUTABLE_IMAGE         ,0x0002)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_LINE_NUMS_STRIPPED       ,0x0004)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_LOCAL_SYMS_STRIPPED      ,0x0008)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_AGGRESIVE_WS_TRIM        ,0x0010)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_LARGE_ADDRESS_AWARE      ,0x0020)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_BYTES_REVERSED_LO        ,0x0080)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_32BIT_MACHINE            ,0x0100)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_DEBUG_STRIPPED           ,0x0200)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP  ,0x0400)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_NET_RUN_FROM_SWAP        ,0x0800)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_SYSTEM                   ,0x1000)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_DLL                      ,0x2000)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_UP_SYSTEM_ONLY           ,0x4000)
DEF_CONST(FileHeaderCharacteristics,IMAGE_FILE_BYTES_REVERSED_HI        ,0x8000)

DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_UNKNOWN           ,0)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_TARGET_HOST       ,0x0001)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_I386              ,0x014c) // Intel 386.
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_R3000             ,0x0162) // MIPS little-endian, ,0x160 big-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_R4000             ,0x0166) // MIPS little-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_R10000            ,0x0168) // MIPS little-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_WCEMIPSV2         ,0x0169) // MIPS little-endian WCE v2
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_ALPHA             ,0x0184) // Alpha_AXP
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_SH3               ,0x01a2) // SH3 little-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_SH3DSP            ,0x01a3)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_SH3E              ,0x01a4) // SH3E little-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_SH4               ,0x01a6) // SH4 little-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_SH5               ,0x01a8) // SH5
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_ARM               ,0x01c0) // ARM Little-Endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_THUMB             ,0x01c2) // ARM Thumb/Thumb-2 Little-Endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_ARMNT             ,0x01c4) // ARM Thumb-2 Little-Endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_AM33              ,0x01d3)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_POWERPC           ,0x01F0) // IBM PowerPC Little-Endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_POWERPCFP         ,0x01f1)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_IA64              ,0x0200) // Intel 64
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_MIPS16            ,0x0266) // MIPS
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_ALPHA64           ,0x0284) // ALPHA64
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_MIPSFPU           ,0x0366) // MIPS
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_MIPSFPU16         ,0x0466) // MIPS
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_TRICORE           ,0x0520) // Infineon
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_CEF               ,0x0CEF)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_EBC               ,0x0EBC) // EFI Byte Code
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_AMD64             ,0x8664) // AMD64 (K8)
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_M32R              ,0x9041) // M32R little-endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_ARM64             ,0xAA64) // ARM64 Little-Endian
DEF_CONST(FileHeaderMachine,IMAGE_FILE_MACHINE_CEE               ,0xC0EE)

DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_TYPE_NO_PAD                ,0x00000008) // Reserved.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_CNT_CODE                   ,0x00000020) // Section contains code.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_CNT_INITIALIZED_DATA       ,0x00000040) // Section contains initialized data.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_CNT_UNINITIALIZED_DATA     ,0x00000080) // Section contains uninitialized data.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_LNK_OTHER                  ,0x00000100) // Reserved.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_LNK_INFO                   ,0x00000200) // Section contains comments or some other type of information.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_LNK_REMOVE                 ,0x00000800) // Section contents will not become part of image.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_LNK_COMDAT                 ,0x00001000) // Section contents comdat.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_NO_DEFER_SPEC_EXC          ,0x00004000) // Reset speculative exceptions handling bits in the TLB entries for this section.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_GPREL                      ,0x00008000) // Section content can be accessed relative to GP
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_FARDATA                ,0x00008000)
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_PURGEABLE              ,0x00020000)
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_16BIT                  ,0x00020000)
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_LOCKED                 ,0x00040000)
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_PRELOAD                ,0x00080000)
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_1BYTES               ,0x00100000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_2BYTES               ,0x00200000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_4BYTES               ,0x00300000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_8BYTES               ,0x00400000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_16BYTES              ,0x00500000) // Default alignment if no others are specified.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_32BYTES              ,0x00600000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_64BYTES              ,0x00700000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_128BYTES             ,0x00800000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_256BYTES             ,0x00900000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_512BYTES             ,0x00A00000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_1024BYTES            ,0x00B00000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_2048BYTES            ,0x00C00000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_4096BYTES            ,0x00D00000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_8192BYTES            ,0x00E00000) //
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_ALIGN_MASK                 ,0x00F00000)
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_LNK_NRELOC_OVFL            ,0x01000000) // Section contains extended relocations.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_DISCARDABLE            ,0x02000000) // Section can be discarded.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_NOT_CACHED             ,0x04000000) // Section is not cachable.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_NOT_PAGED              ,0x08000000) // Section is not pageable.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_SHARED                 ,0x10000000) // Section is shareable.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_EXECUTE                ,0x20000000) // Section is executable.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_READ                   ,0x40000000) // Section is readable.
DEF_CONST(SectionHeaderCharacteristics,IMAGE_SCN_MEM_WRITE                  ,0x80000000) // Section is writeable.

DEF_CONST(BaseReloc,IMAGE_REL_BASED_ABSOLUTE              ,0)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_HIGH                  ,1)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_LOW                   ,2)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_HIGHLOW               ,3)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_HIGHADJ               ,4)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_MACHINE_SPECIFIC_5    ,5)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_RESERVED              ,6)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_MACHINE_SPECIFIC_7    ,7)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_MACHINE_SPECIFIC_8    ,8)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_MACHINE_SPECIFIC_9    ,9)
DEF_CONST(BaseReloc,IMAGE_REL_BASED_DIR64                 ,10)

DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_UNKNOWN              ,0)   // Unknown subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_NATIVE               ,1)   // Image doesn't require a subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_WINDOWS_GUI          ,2)   // Image runs in the Windows GUI subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_WINDOWS_CUI          ,3)   // Image runs in the Windows character subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_OS2_CUI              ,5)   // image runs in the OS/2 character subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_POSIX_CUI            ,7)   // image runs in the Posix character subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_NATIVE_WINDOWS       ,8)   // image is a native Win9x driver.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_WINDOWS_CE_GUI       ,9)   // Image runs in the Windows CE subsystem.
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_EFI_APPLICATION      ,10)  //
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER  ,11)   //
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER   ,12)  //
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_EFI_ROM              ,13)
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_XBOX                 ,14)
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION ,16)
DEF_CONST(OptSubsystem,IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG    ,17)

DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA    ,0x0020)  // Image can handle a high entropy 64-bit virtual address space.
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE ,0x0040)     // DLL can move.
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY    ,0x0080)     // Code Integrity Image
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_NX_COMPAT    ,0x0100)     // Image is NX compatible
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_NO_ISOLATION ,0x0200)     // Image understands isolation and doesn't want it
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_NO_SEH       ,0x0400)     // Image does not use SEH.  No SE handler may reside in this image
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_NO_BIND      ,0x0800)     // Do not bind this image.
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_APPCONTAINER ,0x1000)     // Image should execute in an AppContainer
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_WDM_DRIVER   ,0x2000)     // Driver uses WDM model
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_GUARD_CF     ,0x4000)     // Image supports Control Flow Guard.
DEF_CONST(OptCharacteristics,IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE     ,0x8000)